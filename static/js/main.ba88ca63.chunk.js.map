{"version":3,"sources":["components/PdfDocument.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Font","register","family","fonts","src","process","fontWeight","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","fontFamily","topSectionWrapper","flexDirection","justifyContent","alignItems","marginBottom","title","textTransform","author","color","sectionHeader","footer","position","bottom","left","right","profilePhotoWrap","marginLeft","flex","profilePhoto","width","height","borderRadius","backgroundColor","verticalBanner","marginTop","bannerHighlight","marginHorizontal","contactDetails","contactItem","contactIcon","marginRight","contactText","bannerContent","paddingVertical","lineHeight","PdfDocument","style","data","basics","location","address","city","phone","email","profiles","map","profile","key","url","logo","display","borderBottomLeftRadius","borderBottomRightRadius","summary","borderBottom","textAlign","name","label","picture","awards","award","awarder","date","work","index","border","padding","company","startDate","endDate","borderLeft","paddingLeft","flexWrap","tags","tag","projects","project","description","fixed","render","pageNumber","totalPages","App","isMobile","document","fileName","blob","loading","error","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ba88ca63.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  View,\n  Image,\n  Link,\n  Font,\n} from \"@react-pdf/renderer\";\nimport data from \"../utils/data.json\";\n\nFont.register({\n  family: \"Roboto\",\n  fonts: [\n    { src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Regular.ttf` },\n    {\n      src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Bold.ttf`,\n      fontWeight: \"bold\",\n    },\n  ],\n});\n\nFont.register({\n  family: \"Roboto-thin\",\n  fonts: [{ src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Thin.ttf` }],\n});\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n    fontSize: 12,\n    fontFamily: \"Roboto\",\n  },\n  topSectionWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    marginBottom: 10,\n  },\n  title: {\n    fontSize: 40,\n    marginBottom: 2,\n    textTransform: \"uppercase\",\n    fontFamily: \"Roboto-thin\",\n  },\n  author: {\n    fontSize: 12,\n    color: \"#666666\",\n    marginBottom: 10,\n  },\n  sectionHeader: { marginBottom: 20 },\n  footer: {\n    position: \"absolute\",\n    fontSize: 8,\n    bottom: 20,\n    left: 30,\n    right: 30,\n    color: \"grey\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  profilePhotoWrap: {\n    marginLeft: 25,\n    flex: 1,\n  },\n  profilePhoto: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: \"#eeeeee\",\n  },\n  verticalBanner: {\n    backgroundColor: \"#eeeeee\",\n    marginTop: -35,\n    marginBottom: 35,\n    width: 190,\n    fontSize: 12,\n    color: \"#333333\",\n  },\n  bannerHighlight: {\n    backgroundColor: \"#bada55\",\n    height: 20,\n    marginHorizontal: 20,\n  },\n  contactDetails: {\n    backgroundColor: \"#ffffff\",\n    paddingHorizontal: 20,\n    paddingTop: 30,\n    paddingBottom: 15,\n  },\n  contactItem: { flexDirection: \"row\", marginBottom: 15 },\n  contactIcon: { height: 12, marginRight: 5 },\n  contactText: { color: \"#333333\", fontSize: 10 },\n  bannerContent: {\n    paddingHorizontal: 20,\n    paddingVertical: 25,\n    lineHeight: 1.5,\n  },\n});\n\nfunction PdfDocument() {\n  return (\n      <Document title=\"Basem_Jawahri\">\n        <Page style={styles.body}>\n          <View style={styles.topSectionWrapper}>\n            <View style={styles.verticalBanner}>\n              <View style={styles.bannerHighlight}></View>\n              <View style={styles.contactDetails}>\n                <View style={styles.contactItem}>\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/images/maps-icon.png`}\n                    style={styles.contactIcon}\n                  />\n                  <Text\n                    style={styles.contactText}\n                  >{`${data.basics.location.address}, ${data.basics.location.city}`}</Text>\n                </View>\n                <View style={styles.contactItem}>\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/images/phone-icon.png`}\n                    style={styles.contactIcon}\n                  />\n                  <Text style={styles.contactText}>{data.basics.phone}</Text>\n                </View>\n                <View style={styles.contactItem}>\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/images/email_icon.png`}\n                    style={styles.contactIcon}\n                  />\n                  <Link\n                    src={`mailto:${data.basics.email}`}\n                    style={styles.contactText}\n                  >\n                    {data.basics.email}\n                  </Link>\n                </View>\n                {data.basics.profiles.map((profile) => (\n                  <View key={profile.url} style={styles.contactItem}>\n                    <Image\n                      src={`${process.env.PUBLIC_URL}/assets/images/${profile.logo}`}\n                      style={styles.contactIcon}\n                    />\n                    <Link src={profile.url} style={styles.contactText}>\n                      {profile.display}\n                    </Link>\n                  </View>\n                ))}\n              </View>\n              <View\n                style={{\n                  ...styles.bannerHighlight,\n                  borderBottomLeftRadius: 5,\n                  borderBottomRightRadius: 5,\n                }}\n              ></View>\n              <View style={styles.bannerContent}>\n                <Text style={styles.sectionHeader}>OVERVIEW</Text>\n                <Text>{data.basics.summary}</Text>\n              </View>\n            </View>\n\n            <View style={{ flex: 1, marginLeft: 35 }}>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  paddingBottom: 25,\n                  marginBottom: 25,\n                  borderBottom: \"2 solid #aaaaaa\",\n                }}\n              >\n                <View style={{ flex: 2, textAlign: \"right\" }}>\n                  <Text style={styles.title}>{data.basics.name}</Text>\n                  <Text style={styles.author}>{data.basics.label}</Text>\n                </View>\n                <View style={styles.profilePhotoWrap}>\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/images/${data.basics.picture}`}\n                    style={styles.profilePhoto}\n                  />\n                </View>\n              </View>\n\n              <View style={{ fontSize: 12 }}>\n                <Text style={styles.sectionHeader}>CERTIFICATIONS</Text>\n                {data.awards.map((award) => (\n                  <View\n                    key={award.title}\n                    style={{ flexDirection: \"row\", marginBottom: 15, flex: 1 }}\n                  >\n                    <Image\n                      src={`${process.env.PUBLIC_URL}/assets/images/${award.logo}`}\n                      style={{ height: 26, marginRight: 10, borderRadius: 3 }}\n                    />\n                    <View>\n                      <Text>{award.title}</Text>\n                      <Text\n                        style={{ fontSize: 10, color: \"#666666\", marginTop: 3 }}\n                      >\n                        {award.awarder}\n                      </Text>\n                    </View>\n                    <View\n                      style={{\n                        flex: 1,\n                        marginLeft: 10,\n                        textAlign: \"right\",\n                        color: \"#666666\",\n                        fontSize: 10,\n                      }}\n                    >\n                      <Text>{award.date}</Text>\n                    </View>\n                  </View>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <Text style={styles.sectionHeader}>EXPERIENCE</Text>\n\n          {data.work.map((work, index) => (\n            <View key={index}>\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <View\n                  style={{\n                    height: 34,\n                    width: 34,\n                    marginRight: 10,\n                    borderRadius: 5,\n                    border: \"2 solid #bada55\",\n                  }}\n                >\n                  <Image\n                    src={`${process.env.PUBLIC_URL}/assets/images/${work.logo}`}\n                    style={{ borderRadius: 5, padding: 2 }}\n                  />\n                </View>\n                <View>\n                  <Text>{work.company}</Text>\n                  <Text\n                    style={{ fontSize: 10, color: \"#666666\", marginTop: 3 }}\n                  >\n                    {work.position}\n                  </Text>\n                </View>\n                <View\n                  style={{\n                    flex: 1,\n                    marginLeft: 10,\n                    textAlign: \"right\",\n                    color: \"#666666\",\n                    fontSize: 10,\n                  }}\n                >\n                  <Text>\n                    {work.startDate === work.endDate\n                      ? work.startDate\n                      : `${work.startDate} - ${work.endDate}`}\n                  </Text>\n                </View>\n              </View>\n              <View\n                style={{\n                  borderLeft: \"2 solid #bada55\",\n                  marginLeft: 16,\n                  paddingLeft: 26,\n                  paddingTop: 15,\n                  paddingBottom: 20,\n                  lineHeight: 1.5,\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    lineHeight: 1.2,\n                    marginBottom: 10,\n                  }}\n                >\n                  {work.tags.map((tag, index) => (\n                    <Text\n                      key={index}\n                      style={{\n                        backgroundColor: \"#aaaaaa\",\n                        color: \"#ffffff\",\n                        borderRadius: 3,\n                        paddingHorizontal: 7,\n                        paddingVertical: 2,\n                        fontSize: 9,\n                        marginRight: 5,\n                        marginBottom: 7,\n                      }}\n                    >\n                      {tag}\n                    </Text>\n                  ))}\n                </View>\n                <Text>{work.summary}</Text>\n                {work.projects.map((project, index) => (\n                  <View key={index} style={{ marginTop: 10, marginLeft: 35 }}>\n                    <Text style={{ fontWeight: \"bold\" }}>{project.title}</Text>\n                    <Text>{project.description}</Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n          ))}\n\n          <View style={styles.footer} fixed>\n            <Text\n              fixed\n              render={({ pageNumber, totalPages }) =>\n                `${data.basics.name} - page ${pageNumber} of ${totalPages}`\n              }\n            />\n            <Text>This CV is developed using react-pdf</Text>\n          </View>\n        </Page>\n      </Document>\n  );\n}\n\nexport default PdfDocument;\n","import React from \"react\";\nimport { PDFViewer, PDFDownloadLink, View } from \"@react-pdf/renderer\";\nimport PdfDocument from \"./components/PdfDocument\";\nimport { isMobile } from \"react-device-detect\";\nimport \"./App.css\";\n\nfunction App() {\n  return isMobile ? (\n    <div style={{ textAlign: \"center\", padding: 20, paddingTop: 150 }}>\n      <p>\n        This document cannot be viewed on your browser. You can download the PDF\n        instead.\n      </p>\n      <PDFDownloadLink document={<PdfDocument />} fileName=\"somename.pdf\">\n        {({ blob, url, loading, error }) =>\n          loading ? \"Loading document...\" : \"Download now!\"\n        }\n      </PDFDownloadLink>\n    </div>\n  ) : (\n    <PDFViewer width=\"100%\" height=\"100%\">\n      <PdfDocument />\n    </PDFViewer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}