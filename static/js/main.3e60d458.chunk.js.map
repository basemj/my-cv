{"version":3,"sources":["components/Footer.tsx","components/ProfileBanner.tsx","colors.ts","components/Tag.tsx","components/Project.tsx","components/WorkEntry.tsx","components/Award.tsx","components/Awards.tsx","components/ContactItem.tsx","components/VerticalBanner.tsx","components/PdfDocument.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["styles","StyleSheet","create","footer","position","fontSize","bottom","left","right","color","flexDirection","justifyContent","Footer","name","style","fixed","render","pageNumber","totalPages","profileBanner","paddingBottom","marginBottom","borderBottom","title","textTransform","fontFamily","author","profilePhotoWrap","marginLeft","flex","profilePhoto","width","height","borderRadius","backgroundColor","ProfileBanner","label","picture","textAlign","src","tag","paddingHorizontal","paddingVertical","marginRight","Tag","tagText","projectWrapper","marginTop","projectTitle","fontWeight","marginVertical","Project","project","description","entryHeader","alignItems","imageWrapper","border","image","companyName","date","entryBody","borderLeft","paddingLeft","paddingTop","lineHeight","tagsWrap","flexWrap","WorkEntry","work","wrap","process","logo","company","startDate","endDate","tags","map","index","key","summary","projects","awardWrap","awarder","Award","sectionHeader","Awards","awards","award","contactItem","contactIcon","contactText","ContactItem","icon","text","link","verticalBanner","bannerHighlight","marginHorizontal","contactDetails","bannerContent","VerticalBanner","address","city","phone","email","profiles","profile","url","display","borderBottomLeftRadius","borderBottomRightRadius","Font","register","family","fonts","body","topSectionWrapper","rightSection","PdfDocument","data","basics","location","App","isMobile","padding","document","fileName","blob","loading","error","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"qlZAGMA,EAASC,IAAWC,OAAO,CAC/BC,OAAQ,CACNC,SAAU,WACVC,SAAU,EACVC,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,MAAO,OACPC,cAAe,MACfC,eAAgB,mBAsBLC,EAdA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAChB,OACE,kBAAC,IAAD,CAAMC,MAAOd,EAAOG,OAAQY,OAAK,GAC/B,kBAAC,IAAD,CACEA,OAAK,EACLC,OAAQ,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,gBACHL,EADG,mBACYI,EADZ,eAC6BC,MAGvC,kBAAC,IAAD,+CCzBAlB,EAASC,IAAWC,OAAO,CAC/BiB,cAAe,CACbT,cAAe,MACfU,cAAe,GACfC,aAAc,GACdC,aAAa,WAAD,OCRW,YDUzBC,MAAO,CACLlB,SAAU,GACVgB,aAAc,EACdG,cAAe,YACfC,WAAY,eAEdC,OAAQ,CACNrB,SAAU,GACVI,MChB8B,UDiB9BY,aAAc,IAEhBM,iBAAkB,CAChBC,WAAY,GACZC,KAAM,GAERC,aAAc,CACZC,MAAO,IACPC,OAAQ,IACRC,aAAc,GACdC,gBC7BuB,aDqDZC,EAdO,SAAC,GAAsC,IAApCtB,EAAmC,EAAnCA,KAAMuB,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,QACpC,OACE,kBAAC,IAAD,CAAMvB,MAAOd,EAAOmB,eAClB,kBAAC,IAAD,CAAML,MAAO,CAAEe,KAAM,EAAGS,UAAW,UACjC,kBAAC,IAAD,CAAMxB,MAAOd,EAAOuB,OAAQV,GAC5B,kBAAC,IAAD,CAAMC,MAAOd,EAAO0B,QAASU,IAE/B,kBAAC,IAAD,CAAMtB,MAAOd,EAAO2B,kBAClB,kBAAC,IAAD,CAAOY,IAAKF,EAASvB,MAAOd,EAAO8B,kBE5CrC9B,EAASC,IAAWC,OAAO,CAC/BsC,IAAK,CACHN,gBDDoB,UCEpBzB,MDDwB,UCExBwB,aAAc,EACdQ,kBAAmB,EACnBC,gBAAiB,EACjBrC,SAAU,EACVsC,YAAa,EACbtB,aAAc,KAYHuB,EAJH,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QACb,OAAO,kBAAC,IAAD,CAAM/B,MAAOd,EAAOwC,KAAMK,IClB7B7C,EAASC,IAAWC,OAAO,CAC/B4C,eAAgB,CAAEC,UAAW,GAAInB,WAAY,IAC7CoB,aAAc,CAAEC,WAAY,OAAQC,eAAgB,KAgBvCC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QACjB,OACE,kBAAC,IAAD,CAAMtC,MAAOd,EAAO8C,gBAClB,kBAAC,IAAD,CAAMhC,MAAOd,EAAOgD,cAAeI,EAAQ7B,OAC3C,kBAAC,IAAD,KAAO6B,EAAQC,eCVfrD,EAASC,IAAWC,OAAO,CAC/BoD,YAAa,CAAE5C,cAAe,MAAO6C,WAAY,UACjDC,aAAc,CACZxB,OAAQ,GACRD,MAAO,GACPY,YAAa,GACbV,aAAc,EACdwB,OAAO,WAAD,OHdkB,YGgB1BC,MAAO,CAAEzB,aAAc,GACvB0B,YAAa,CAAEV,WAAY,QAC3B7C,SAAU,CAAEC,SAAU,GAAII,MHfM,UGeqBsC,UAAW,GAChEa,KAAM,CACJ/B,KAAM,EACND,WAAY,GACZU,UAAW,QACX7B,MHpB8B,UGqB9BJ,SAAU,IAEZwD,UAAW,CACTC,WAAW,WAAD,OH3Bc,WG4BxBlC,WAAY,GACZmC,YAAa,GACbC,WAAY,GACZ5C,cAAe,GACf6C,WAAY,KAEdC,SAAU,CACRxD,cAAe,MACfyD,SAAU,OACVF,WAAY,IACZ5C,aAAc,MA6CH+C,EArCG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMvD,MAAOd,EAAOsD,YAAagB,MAAM,GACrC,kBAAC,IAAD,CAAMxD,MAAOd,EAAOwD,cAClB,kBAAC,IAAD,CACEjB,IAAG,UAAKgC,SAAL,0BAA6CF,EAAKG,MACrD1D,MAAOd,EAAO0D,SAGlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAM5C,MAAOd,EAAO2D,aAAcU,EAAKI,SACvC,kBAAC,IAAD,CAAM3D,MAAOd,EAAOI,UAAWiE,EAAKjE,WAEtC,kBAAC,IAAD,CAAMU,MAAOd,EAAO4D,MAClB,kBAAC,IAAD,KACGS,EAAKK,YAAcL,EAAKM,QACrBN,EAAKK,UADR,UAEML,EAAKK,UAFX,cAE0BL,EAAKM,YAItC,kBAAC,IAAD,CAAM7D,MAAOd,EAAO6D,WAClB,kBAAC,IAAD,CAAM/C,MAAOd,EAAOkE,UACjBG,EAAKO,KAAKC,KAAI,SAAChC,EAASiC,GAAV,OACb,kBAAC,EAAD,CAAKC,IAAKD,EAAOjC,QAASA,QAG9B,kBAAC,IAAD,KAAOwB,EAAKW,SACXX,EAAKY,SAASJ,KAAI,SAACzB,EAAS0B,GAAV,OACjB,kBAAC,EAAD,CAASC,IAAKD,EAAO1B,QAASA,UCxElCpD,EAASC,IAAWC,OAAO,CAC/BgF,UAAW,CAAExE,cAAe,MAAOW,aAAc,GAAIQ,KAAM,GAC3D6B,MAAO,CAAE1B,OAAQ,GAAIW,YAAa,GAAIV,aAAc,GACpDkD,QAAS,CAAE9E,SAAU,GAAII,MJJO,UIIoBsC,UAAW,GAC/Da,KAAM,CACJ/B,KAAM,EACND,WAAY,GACZU,UAAW,QACX7B,MJT8B,UIU9BJ,SAAU,MA0BC+E,EAfD,SAAC,GAA4C,IAA1C7D,EAAyC,EAAzCA,MAAO4D,EAAkC,EAAlCA,QAASvB,EAAyB,EAAzBA,KAAMY,EAAmB,EAAnBA,KACrC,OACE,kBAAC,IAAD,CAAMO,IAAKxD,EAAOT,MAAOd,EAAOkF,WAC9B,kBAAC,IAAD,CAAO3C,IAAKiC,EAAM1D,MAAOd,EAAO0D,QAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAOnC,GACP,kBAAC,IAAD,CAAMT,MAAOd,EAAOmF,SAAUA,IAEhC,kBAAC,IAAD,CAAMrE,MAAOd,EAAO4D,MAClB,kBAAC,IAAD,KAAOA,MC5BT5D,EAASC,IAAWC,OAAO,CAC/BmF,cAAe,CAAEhE,aAAc,MAwBlBiE,EAjBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAChB,OACE,kBAAC,IAAD,CAAMzE,MAAO,CAAET,SAAU,KACvB,kBAAC,IAAD,CAAMS,MAAOd,EAAOqF,eAApB,kBACCE,EAAOV,KAAI,SAACW,EAAOV,GAAR,OACV,kBAAC,EAAD,CACEC,IAAKD,EACLvD,MAAOiE,EAAMjE,MACbiD,KAAI,UAAKD,SAAL,0BAA6CiB,EAAMhB,MACvDW,QAASK,EAAML,QACfvB,KAAM4B,EAAM5B,Y,SCnBhB5D,EAASC,IAAWC,OAAO,CAC/BuF,YAAa,CAAE/E,cAAe,MAAOW,aAAc,IACnDqE,YAAa,CAAE1D,OAAQ,GAAIW,YAAa,GACxCgD,YAAa,CAAElF,MNLe,UMKUJ,SAAU,MAwBrCuF,EAfK,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KACjC,OACE,kBAAC,IAAD,CAAMjF,MAAOd,EAAOyF,aAClB,kBAAC,IAAD,CAAOlD,IAAKsD,EAAM/E,MAAOd,EAAO0F,cAC/BK,EACC,kBAAC,IAAD,CAAMxD,IAAKwD,EAAMjF,MAAOd,EAAO2F,aAC5BG,GAGH,kBAAC,IAAD,CAAMhF,MAAOd,EAAO2F,aAAcG,KCnBpC9F,EAASC,IAAWC,OAAO,CAC/B8F,eAAgB,CACd9D,gBPPuB,UOQvBa,WAAY,GACZ1B,aAAc,GACdU,MAAO,IACP1B,SAAU,GACVI,MPX4B,WOa9BwF,gBAAiB,CACf/D,gBPhBwB,UOiBxBF,OAAQ,GACRkE,iBAAkB,IAEpBC,eAAgB,CACdjE,gBPjBiB,UOkBjBO,kBAAmB,GACnBuB,WAAY,GACZ5C,cAAe,IAEjBgF,cAAe,CACb3D,kBAAmB,GACnBC,gBAAiB,GACjBuB,WAAY,KAEdoB,cAAe,CAAEhE,aAAc,MA6DlBgF,EAjDQ,SAAC,GAOT,IANbC,EAMY,EANZA,QACAC,EAKY,EALZA,KACAC,EAIY,EAJZA,MACAC,EAGY,EAHZA,MACAzB,EAEY,EAFZA,QACA0B,EACY,EADZA,SAEA,OACE,kBAAC,IAAD,CAAM5F,MAAOd,EAAOgG,gBAClB,kBAAC,IAAD,CAAMlF,MAAOd,EAAOiG,kBACpB,kBAAC,IAAD,CAAMnF,MAAOd,EAAOmG,gBAClB,kBAAC,EAAD,CACEN,KAAI,UAAKtB,SAAL,gCACJuB,KAAI,UAAKQ,EAAL,aAAiBC,KAEvB,kBAAC,EAAD,CACEV,KAAI,UAAKtB,SAAL,iCACJuB,KAAMU,IAER,kBAAC,EAAD,CACEX,KAAI,UAAKtB,SAAL,iCACJuB,KAAMW,EACNV,KAAI,iBAAYU,KAEjBC,EAAS7B,KAAI,SAAC8B,GAAD,OACZ,kBAAC,EAAD,CACE5B,IAAK4B,EAAQC,IACbf,KAAI,UAAKtB,SAAL,0BAA6CoC,EAAQnC,MACzDsB,KAAMa,EAAQE,QACdd,KAAMY,EAAQC,UAIpB,kBAAC,IAAD,CACE9F,MAAK,2BACAd,EAAOiG,iBADP,IAEHa,uBAAwB,EACxBC,wBAAyB,MAG7B,kBAAC,IAAD,CAAMjG,MAAOd,EAAOoG,eAClB,kBAAC,IAAD,CAAMtF,MAAOd,EAAOqF,eAApB,YACA,kBAAC,IAAD,KAAOL,MCrEfgC,IAAKC,SAAS,CACZC,OAAQ,SACRC,MAAO,CACL,CAAE5E,IAAI,GAAD,OAAKgC,SAAL,qCACL,CACEhC,IAAI,GAAD,OAAKgC,SAAL,iCACHtB,WAAY,WAKlB+D,IAAKC,SAAS,CACZC,OAAQ,cACRC,MAAO,CAAC,CAAE5E,IAAI,GAAD,OAAKgC,SAAL,qCAGf,IAAMvE,EAASC,IAAWC,OAAO,CAC/BkH,KAAM,CACJpD,WAAY,GACZ5C,cAAe,GACfqB,kBAAmB,GACnBpC,SAAU,GACVoB,WAAY,SACZhB,MRtC4B,WQwC9B4G,kBAAmB,CACjB3G,cAAe,MACfC,eAAgB,gBAChB4C,WAAY,aACZlC,aAAc,IAEhBgE,cAAe,CAAEhE,aAAc,IAC/BiG,aAAc,CAAEzF,KAAM,EAAGD,WAAY,MAwCxB2F,EArCK,WAClB,OACE,kBAAC,IAAD,CAAUhG,MAAOiG,EAAKC,OAAO5G,MAC3B,kBAAC,IAAD,CAAMC,MAAOd,EAAOoH,MAClB,kBAAC,IAAD,CAAMtG,MAAOd,EAAOqH,mBAClB,kBAAC,EAAD,CACEf,QAASkB,EAAKC,OAAOC,SAASpB,QAC9BC,KAAMiB,EAAKC,OAAOC,SAASnB,KAC3BC,MAAOgB,EAAKC,OAAOjB,MACnBC,MAAOe,EAAKC,OAAOhB,MACnBzB,QAASwC,EAAKC,OAAOzC,QACrB0B,SAAUc,EAAKC,OAAOf,WAGxB,kBAAC,IAAD,CAAM5F,MAAOd,EAAOsH,cAClB,kBAAC,EAAD,CACEzG,KAAM2G,EAAKC,OAAO5G,KAClBuB,MAAOoF,EAAKC,OAAOrF,MACnBC,QAAO,UAAKkC,SAAL,0BAA6CiD,EAAKC,OAAOpF,WAGlE,kBAAC,EAAD,CAAQkD,OAAQiC,EAAKjC,WAIzB,kBAAC,IAAD,CAAMzE,MAAOd,EAAOqF,eAApB,cAECmC,EAAKnD,KAAKQ,KAAI,SAACR,EAAMS,GAAP,OACb,kBAAC,EAAD,CAAWC,IAAKD,EAAOT,KAAMA,OAG/B,kBAAC,EAAD,CAAQxD,KAAM2G,EAAKC,OAAO5G,U,SCrDnB8G,G,OAvBH,WACV,OAAOC,WACL,yBAAK9G,MAAO,CAAEwB,UAAW,SAAUuF,QAAS,GAAI7D,WAAY,MAC1D,gHAIA,kBAAC,IAAD,CACE8D,SAAU,kBAAC,EAAD,MACVC,SAAQ,UAAKP,EAAKC,OAAO5G,KAAjB,UAEP,cAAGmH,KAAH,EAASpB,IAAT,IAAcqB,EAAd,EAAcA,QAAd,EAAuBC,MAAvB,OACCD,EAAU,sBAAwB,oBAKxC,kBAAC,IAAD,CAAWlG,MAAM,OAAOC,OAAO,QAC7B,kBAAC,EAAD,SCbcmG,QACW,cAA7BC,OAAOV,SAASW,UAEe,UAA7BD,OAAOV,SAASW,UAEhBD,OAAOV,SAASW,SAASC,MACvB,2DCZNC,IAASvH,OACP,kBAAC,IAAMwH,WAAP,KACE,kBAAC,EAAD,OAEFV,SAASW,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAd,GACLe,QAAQf,MAAMA,EAAMgB,c","file":"static/js/main.3e60d458.chunk.js","sourcesContent":["import React from \"react\";\nimport { Text, StyleSheet, View } from \"@react-pdf/renderer\";\n\nconst styles = StyleSheet.create({\n  footer: {\n    position: \"absolute\",\n    fontSize: 8,\n    bottom: 20,\n    left: 30,\n    right: 30,\n    color: \"grey\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n});\n\ninterface IProps {\n  name: string;\n}\n\nconst Footer = ({ name }: IProps) => {\n  return (\n    <View style={styles.footer} fixed>\n      <Text\n        fixed\n        render={({ pageNumber, totalPages }) =>\n          `${name} - page ${pageNumber} of ${totalPages}`\n        }\n      />\n      <Text>This CV is developed using react-pdf</Text>\n    </View>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Text, StyleSheet, View, Image } from \"@react-pdf/renderer\";\nimport { fontSecondaryColor, accentColor } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  profileBanner: {\n    flexDirection: \"row\",\n    paddingBottom: 25,\n    marginBottom: 25,\n    borderBottom: `2 solid ${accentColor}`,\n  },\n  title: {\n    fontSize: 40,\n    marginBottom: 2,\n    textTransform: \"uppercase\",\n    fontFamily: \"Roboto-thin\",\n  },\n  author: {\n    fontSize: 12,\n    color: fontSecondaryColor,\n    marginBottom: 10,\n  },\n  profilePhotoWrap: {\n    marginLeft: 25,\n    flex: 1,\n  },\n  profilePhoto: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: accentColor,\n  },\n});\n\ninterface IProps {\n  name: string;\n  label: string;\n  picture: string;\n}\n\nconst ProfileBanner = ({ name, label, picture }: IProps) => {\n  return (\n    <View style={styles.profileBanner}>\n      <View style={{ flex: 2, textAlign: \"right\" }}>\n        <Text style={styles.title}>{name}</Text>\n        <Text style={styles.author}>{label}</Text>\n      </View>\n      <View style={styles.profilePhotoWrap}>\n        <Image src={picture} style={styles.profilePhoto} />\n      </View>\n    </View>\n  );\n};\n\nexport default ProfileBanner;\n","export const primaryColor = \"#bada55\";\nexport const accentColor = \"#eeeeee\";\nexport const fontPrimaryColor = \"#333333\";\nexport const fontSecondaryColor = \"#666666\";\nexport const white = \"#ffffff\";\nexport const tagColor = \"#f2d0cb\";\nexport const tagFontColor = \"#4a0a00\";\n","import React from \"react\";\nimport { Text, StyleSheet } from \"@react-pdf/renderer\";\nimport { tagColor, tagFontColor } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  tag: {\n    backgroundColor: tagColor,\n    color: tagFontColor,\n    borderRadius: 3,\n    paddingHorizontal: 7,\n    paddingVertical: 2,\n    fontSize: 9,\n    marginRight: 5,\n    marginBottom: 7,\n  },\n});\n\ninterface IProps {\n  tagText: string;\n}\n\nconst Tag = ({ tagText }: IProps) => {\n  return <Text style={styles.tag}>{tagText}</Text>;\n};\n\nexport default Tag;\n","import React from \"react\";\nimport { Text, StyleSheet, View } from \"@react-pdf/renderer\";\nimport { IProject } from \"../types\";\n\nconst styles = StyleSheet.create({\n  projectWrapper: { marginTop: 10, marginLeft: 35 },\n  projectTitle: { fontWeight: \"bold\", marginVertical: 5 },\n});\n\ninterface IProps {\n  project: IProject;\n}\n\nconst Project = ({ project }: IProps) => {\n  return (\n    <View style={styles.projectWrapper}>\n      <Text style={styles.projectTitle}>{project.title}</Text>\n      <Text>{project.description}</Text>\n    </View>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { Text, StyleSheet, View, Image } from \"@react-pdf/renderer\";\nimport Tag from \"./Tag\";\nimport Project from \"./Project\";\nimport { IWork } from \"../types\";\nimport { fontSecondaryColor, primaryColor } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  entryHeader: { flexDirection: \"row\", alignItems: \"center\" },\n  imageWrapper: {\n    height: 34,\n    width: 34,\n    marginRight: 10,\n    borderRadius: 5,\n    border: `2 solid ${primaryColor}`,\n  },\n  image: { borderRadius: 2 },\n  companyName: { fontWeight: \"bold\" },\n  position: { fontSize: 10, color: fontSecondaryColor, marginTop: 3 },\n  date: {\n    flex: 1,\n    marginLeft: 10,\n    textAlign: \"right\",\n    color: fontSecondaryColor,\n    fontSize: 10,\n  },\n  entryBody: {\n    borderLeft: `2 solid ${primaryColor}`,\n    marginLeft: 16,\n    paddingLeft: 26,\n    paddingTop: 15,\n    paddingBottom: 20,\n    lineHeight: 1.5,\n  },\n  tagsWrap: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    lineHeight: 1.2,\n    marginBottom: 10,\n  },\n});\n\ninterface IProps {\n  work: IWork;\n}\n\nconst WorkEntry = ({ work }: IProps) => {\n  return (\n    <View>\n      <View style={styles.entryHeader} wrap={false}>\n        <View style={styles.imageWrapper}>\n          <Image\n            src={`${process.env.PUBLIC_URL}/assets/images/${work.logo}`}\n            style={styles.image}\n          />\n        </View>\n        <View>\n          <Text style={styles.companyName}>{work.company}</Text>\n          <Text style={styles.position}>{work.position}</Text>\n        </View>\n        <View style={styles.date}>\n          <Text>\n            {work.startDate === work.endDate\n              ? work.startDate\n              : `${work.startDate} - ${work.endDate}`}\n          </Text>\n        </View>\n      </View>\n      <View style={styles.entryBody}>\n        <View style={styles.tagsWrap}>\n          {work.tags.map((tagText, index) => (\n            <Tag key={index} tagText={tagText} />\n          ))}\n        </View>\n        <Text>{work.summary}</Text>\n        {work.projects.map((project, index) => (\n          <Project key={index} project={project} />\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default WorkEntry;\n","import React from \"react\";\nimport { Text, StyleSheet, View, Image } from \"@react-pdf/renderer\";\nimport { fontSecondaryColor } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  awardWrap: { flexDirection: \"row\", marginBottom: 15, flex: 1 },\n  image: { height: 26, marginRight: 10, borderRadius: 3 },\n  awarder: { fontSize: 10, color: fontSecondaryColor, marginTop: 3 },\n  date: {\n    flex: 1,\n    marginLeft: 10,\n    textAlign: \"right\",\n    color: fontSecondaryColor,\n    fontSize: 10,\n  },\n});\n\ninterface IProps {\n  title: string;\n  awarder: string;\n  date: string;\n  logo: string;\n}\n\nconst Award = ({ title, awarder, date, logo }: IProps) => {\n  return (\n    <View key={title} style={styles.awardWrap}>\n      <Image src={logo} style={styles.image} />\n      <View>\n        <Text>{title}</Text>\n        <Text style={styles.awarder}>{awarder}</Text>\n      </View>\n      <View style={styles.date}>\n        <Text>{date}</Text>\n      </View>\n    </View>\n  );\n};\n\nexport default Award;\n","import React from \"react\";\nimport { Text, StyleSheet, View } from \"@react-pdf/renderer\";\nimport Award from \"./Award\";\nimport { IAward } from \"../types\";\n\nconst styles = StyleSheet.create({\n  sectionHeader: { marginBottom: 20 },\n});\n\ninterface IProps {\n  awards: Array<IAward>;\n}\n\nconst Awards = ({ awards }: IProps) => {\n  return (\n    <View style={{ fontSize: 12 }}>\n      <Text style={styles.sectionHeader}>CERTIFICATIONS</Text>\n      {awards.map((award, index) => (\n        <Award\n          key={index}\n          title={award.title}\n          logo={`${process.env.PUBLIC_URL}/assets/images/${award.logo}`}\n          awarder={award.awarder}\n          date={award.date}\n        />\n      ))}\n    </View>\n  );\n};\n\nexport default Awards;\n","import React from \"react\";\nimport { Text, StyleSheet, View, Image, Link } from \"@react-pdf/renderer\";\nimport { fontPrimaryColor } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  contactItem: { flexDirection: \"row\", marginBottom: 15 },\n  contactIcon: { height: 12, marginRight: 5 },\n  contactText: { color: fontPrimaryColor, fontSize: 10 },\n});\n\ninterface IProps {\n  icon: string;\n  text: string;\n  link?: string;\n}\n\nconst ContactItem = ({ icon, text, link }: IProps) => {\n  return (\n    <View style={styles.contactItem}>\n      <Image src={icon} style={styles.contactIcon} />\n      {link ? (\n        <Link src={link} style={styles.contactText}>\n          {text}\n        </Link>\n      ) : (\n        <Text style={styles.contactText}>{text}</Text>\n      )}\n    </View>\n  );\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport { Text, StyleSheet, View } from \"@react-pdf/renderer\";\nimport ContactItem from \"./ContactItem\";\nimport { IProfile } from \"../types\";\nimport { accentColor, fontPrimaryColor, primaryColor, white } from \"../colors\";\n\nconst styles = StyleSheet.create({\n  verticalBanner: {\n    backgroundColor: accentColor,\n    marginTop: -35,\n    marginBottom: 35,\n    width: 190,\n    fontSize: 12,\n    color: fontPrimaryColor,\n  },\n  bannerHighlight: {\n    backgroundColor: primaryColor,\n    height: 20,\n    marginHorizontal: 20,\n  },\n  contactDetails: {\n    backgroundColor: white,\n    paddingHorizontal: 20,\n    paddingTop: 30,\n    paddingBottom: 15,\n  },\n  bannerContent: {\n    paddingHorizontal: 20,\n    paddingVertical: 25,\n    lineHeight: 1.5,\n  },\n  sectionHeader: { marginBottom: 20 },\n});\n\ninterface IProps {\n  address: string;\n  city: string;\n  phone: string;\n  email: string;\n  summary: string;\n  profiles: Array<IProfile>;\n}\n\nconst VerticalBanner = ({\n  address,\n  city,\n  phone,\n  email,\n  summary,\n  profiles,\n}: IProps) => {\n  return (\n    <View style={styles.verticalBanner}>\n      <View style={styles.bannerHighlight}></View>\n      <View style={styles.contactDetails}>\n        <ContactItem\n          icon={`${process.env.PUBLIC_URL}/assets/images/maps-icon.png`}\n          text={`${address}, ${city}`}\n        />\n        <ContactItem\n          icon={`${process.env.PUBLIC_URL}/assets/images/phone-icon.png`}\n          text={phone}\n        />\n        <ContactItem\n          icon={`${process.env.PUBLIC_URL}/assets/images/email_icon.png`}\n          text={email}\n          link={`mailto:${email}`}\n        />\n        {profiles.map((profile) => (\n          <ContactItem\n            key={profile.url}\n            icon={`${process.env.PUBLIC_URL}/assets/images/${profile.logo}`}\n            text={profile.display}\n            link={profile.url}\n          />\n        ))}\n      </View>\n      <View\n        style={{\n          ...styles.bannerHighlight,\n          borderBottomLeftRadius: 5,\n          borderBottomRightRadius: 5,\n        }}\n      ></View>\n      <View style={styles.bannerContent}>\n        <Text style={styles.sectionHeader}>OVERVIEW</Text>\n        <Text>{summary}</Text>\n      </View>\n    </View>\n  );\n};\n\nexport default VerticalBanner;\n","import React from \"react\";\nimport data from \"../utils/data.json\";\nimport Footer from \"./Footer\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport WorkEntry from \"./WorkEntry\";\nimport Awards from \"./Awards\";\nimport VerticalBanner from \"./VerticalBanner\";\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  View,\n  Font,\n} from \"@react-pdf/renderer\";\nimport { fontPrimaryColor } from \"../colors\";\n\nFont.register({\n  family: \"Roboto\",\n  fonts: [\n    { src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Regular.ttf` },\n    {\n      src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Bold.ttf`,\n      fontWeight: \"bold\",\n    },\n  ],\n});\n\nFont.register({\n  family: \"Roboto-thin\",\n  fonts: [{ src: `${process.env.PUBLIC_URL}/assets/fonts/Roboto-Thin.ttf` }],\n});\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n    fontSize: 12,\n    fontFamily: \"Roboto\",\n    color: fontPrimaryColor,\n  },\n  topSectionWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\",\n    marginBottom: 10,\n  },\n  sectionHeader: { marginBottom: 20 },\n  rightSection: { flex: 1, marginLeft: 35 },\n});\n\nconst PdfDocument = () => {\n  return (\n    <Document title={data.basics.name}>\n      <Page style={styles.body}>\n        <View style={styles.topSectionWrapper}>\n          <VerticalBanner\n            address={data.basics.location.address}\n            city={data.basics.location.city}\n            phone={data.basics.phone}\n            email={data.basics.email}\n            summary={data.basics.summary}\n            profiles={data.basics.profiles}\n          />\n\n          <View style={styles.rightSection}>\n            <ProfileBanner\n              name={data.basics.name}\n              label={data.basics.label}\n              picture={`${process.env.PUBLIC_URL}/assets/images/${data.basics.picture}`}\n            />\n\n            <Awards awards={data.awards} />\n          </View>\n        </View>\n\n        <Text style={styles.sectionHeader}>EXPERIENCE</Text>\n\n        {data.work.map((work, index) => (\n          <WorkEntry key={index} work={work} />\n        ))}\n\n        <Footer name={data.basics.name} />\n      </Page>\n    </Document>\n  );\n};\n\nexport default PdfDocument;\n","import React from \"react\";\nimport { PDFViewer, PDFDownloadLink } from \"@react-pdf/renderer\";\nimport PdfDocument from \"./components/PdfDocument\";\nimport { isMobile } from \"react-device-detect\";\nimport \"./App.css\";\nimport data from \"./utils/data.json\";\n\nconst App = () => {\n  return isMobile ? (\n    <div style={{ textAlign: \"center\", padding: 20, paddingTop: 150 }}>\n      <p>\n        This document cannot be viewed on your browser. You can download the PDF\n        instead.\n      </p>\n      <PDFDownloadLink\n        document={<PdfDocument />}\n        fileName={`${data.basics.name}.pdf`}\n      >\n        {({ blob, url, loading, error }) =>\n          loading ? \"Loading document...\" : \"Download now!\"\n        }\n      </PDFDownloadLink>\n    </div>\n  ) : (\n    <PDFViewer width=\"100%\" height=\"100%\">\n      <PdfDocument />\n    </PDFViewer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}