{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["Font","register","family","fonts","src","fontWeight","styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","fontSize","fontFamily","title","marginBottom","textTransform","author","color","footer","position","bottom","left","right","flexDirection","justifyContent","profilePhotoWrap","marginLeft","flex","profilePhoto","width","height","borderRadius","backgroundColor","verticalBanner","marginTop","App","style","alignItems","marginHorizontal","marginRight","data","basics","location","address","city","phone","email","profiles","map","profile","logo","url","display","borderBottomLeftRadius","borderBottomRightRadius","paddingVertical","lineHeight","summary","borderBottom","textAlign","name","label","picture","awards","award","awarder","date","work","border","padding","company","startDate","endDate","borderLeft","paddingLeft","flexWrap","tags","tag","projects","project","description","fixed","render","pageNumber","totalPages","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a21ce371.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  View,\n  Image,\n  Link,\n  Font,\n} from \"@react-pdf/renderer\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport data from \"./utils/data.json\";\nimport \"./App.css\";\n\nFont.register({\n  family: \"Roboto\",\n  fonts: [\n    { src: \"/assets/Roboto/Roboto-Regular.ttf\" },\n    { src: \"/assets/Roboto/Roboto-Thin.ttf\", fontWeight: \"light\" },\n    { src: \"/assets/Roboto/Roboto-Bold.ttf\", fontWeight: \"bold\" },\n  ],\n});\n\nFont.register({\n  family: \"Roboto-thin\",\n  fonts: [{ src: \"/assets/Roboto/Roboto-Thin.ttf\" }],\n});\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n    fontSize: 12,\n    fontFamily: \"Roboto\",\n  },\n  title: {\n    fontSize: 40,\n    marginBottom: 2,\n    textTransform: \"uppercase\",\n    fontFamily: \"Roboto-thin\",\n  },\n  author: {\n    fontSize: 12,\n    color: \"#666666\",\n    marginBottom: 10,\n  },\n  footer: {\n    position: \"absolute\",\n    fontSize: 8,\n    bottom: 20,\n    left: 30,\n    right: 30,\n    color: \"grey\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  profilePhotoWrap: {\n    marginLeft: 25,\n    flex: 1,\n  },\n  profilePhoto: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: \"#eeeeee\",\n  },\n  verticalBanner: {\n    backgroundColor: \"#eeeeee\",\n    marginTop: -35,\n    marginBottom: 35,\n    width: 190,\n    fontSize: 12,\n    color: \"#333333\",\n  },\n});\n\nfunction App() {\n  return (\n    <PDFViewer width=\"100%\" height=\"100%\">\n      <Document title=\"Basem_Jawahri\">\n        <Page style={styles.body}>\n          <View\n            style={{\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"flex-start\",\n            }}\n          >\n            <View style={styles.verticalBanner}>\n              <View\n                style={{\n                  backgroundColor: \"#bada55\",\n                  height: 20,\n                  marginHorizontal: 20,\n                }}\n              ></View>\n              <View\n                style={{\n                  backgroundColor: \"#ffffff\",\n                  paddingHorizontal: 20,\n                  paddingTop: 30,\n                  paddingBottom: 15,\n                }}\n              >\n                <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\n                  <Image\n                    src=\"/assets/maps-icon.png\"\n                    style={{ height: 12, marginRight: 5 }}\n                  />\n                  <Text\n                    style={{ fontSize: 10 }}\n                  >{`${data.basics.location.address}, ${data.basics.location.city}`}</Text>\n                </View>\n                <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\n                  <Image\n                    src=\"/assets/phone-icon.png\"\n                    style={{ height: 12, marginRight: 5 }}\n                  />\n                  <Text style={{ fontSize: 10 }}>{data.basics.phone}</Text>\n                </View>\n                <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\n                  <Image\n                    src=\"/assets/email_icon.png\"\n                    style={{ height: 12, marginRight: 5 }}\n                  />\n                  <Link\n                    src={`mailto:${data.basics.email}`}\n                    style={{ color: \"#333333\", fontSize: 10 }}\n                  >\n                    {data.basics.email}\n                  </Link>\n                </View>\n                {data.basics.profiles.map((profile) => (\n                  <View style={{ flexDirection: \"row\", marginBottom: 15 }}>\n                    <Image\n                      src={`/assets/${profile.logo}`}\n                      style={{ height: 12, marginRight: 5 }}\n                    />\n                    <Link\n                      src={profile.url}\n                      style={{ color: \"#333333\", fontSize: 10 }}\n                    >\n                      {profile.display}\n                    </Link>\n                  </View>\n                ))}\n              </View>\n              <View\n                style={{\n                  backgroundColor: \"#bada55\",\n                  height: 10,\n                  marginHorizontal: 20,\n                  borderBottomLeftRadius: 5,\n                  borderBottomRightRadius: 5,\n                }}\n              ></View>\n              <View style={{ paddingHorizontal: 20, paddingVertical: 25 }}>\n                <Text style={{ marginBottom: 20 }}>OVERVIEW</Text>\n                <Text style={{ lineHeight: 1.5 }}>{data.basics.summary}</Text>\n              </View>\n            </View>\n\n            <View style={{ flex: 1, marginLeft: 35 }}>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  paddingBottom: 25,\n                  marginBottom: 25,\n                  borderBottom: \"2 solid #aaaaaa\",\n                }}\n              >\n                <View style={{ flex: 2, textAlign: \"right\" }}>\n                  <Text style={styles.title}>{data.basics.name}</Text>\n                  <Text style={styles.author}>{data.basics.label}</Text>\n                </View>\n                <View style={styles.profilePhotoWrap}>\n                  <Image\n                    src={`/assets/${data.basics.picture}`}\n                    style={styles.profilePhoto}\n                  />\n                </View>\n              </View>\n\n              <View style={{ fontSize: 12 }}>\n                <Text style={{ marginBottom: 20 }}>CERTIFICATIONS</Text>\n                {data.awards.map((award) => (\n                  <View\n                    style={{ flexDirection: \"row\", marginBottom: 15, flex: 1 }}\n                  >\n                    <Image\n                      src={`/assets/${award.logo}`}\n                      style={{ height: 26, marginRight: 10, borderRadius: 3 }}\n                    />\n                    <View>\n                      <Text>{award.title}</Text>\n                      <Text\n                        style={{ fontSize: 10, color: \"#666666\", marginTop: 3 }}\n                      >\n                        {award.awarder}\n                      </Text>\n                    </View>\n                    <View\n                      style={{\n                        flex: 1,\n                        marginLeft: 10,\n                        textAlign: \"right\",\n                        color: \"#666666\",\n                        fontSize: 10,\n                      }}\n                    >\n                      <Text>{award.date}</Text>\n                    </View>\n                  </View>\n                ))}\n              </View>\n            </View>\n          </View>\n\n          <Text style={{ marginBottom: 25, marginTop: 10 }}>EXPERIENCE</Text>\n\n          {data.work.map((work) => (\n            <View>\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <View\n                  style={{\n                    height: 34,\n                    width: 34,\n                    marginRight: 10,\n                    borderRadius: 5,\n                    border: \"2 solid #bada55\",\n                  }}\n                >\n                  <Image\n                    src={`/assets/${work.logo}`}\n                    style={{ borderRadius: 5, padding: 2 }}\n                  />\n                </View>\n                <View>\n                  <Text>{work.company}</Text>\n                  <Text\n                    style={{ fontSize: 10, color: \"#666666\", marginTop: 3 }}\n                  >\n                    {work.position}\n                  </Text>\n                </View>\n                <View\n                  style={{\n                    flex: 1,\n                    marginLeft: 10,\n                    textAlign: \"right\",\n                    color: \"#666666\",\n                    fontSize: 10,\n                  }}\n                >\n                  <Text>\n                    {work.startDate === work.endDate\n                      ? work.startDate\n                      : `${work.startDate} - ${work.endDate}`}\n                  </Text>\n                </View>\n              </View>\n              <View\n                style={{\n                  borderLeft: \"2 solid #bada55\",\n                  marginLeft: 16,\n                  paddingLeft: 26,\n                  paddingTop: 15,\n                  paddingBottom: 20,\n                  lineHeight: 1.5,\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    flexWrap: \"wrap\",\n                    lineHeight: 1.2,\n                    marginBottom: 10,\n                  }}\n                >\n                  {work.tags.map((tag) => (\n                    <Text\n                      style={{\n                        backgroundColor: \"#aaaaaa\",\n                        color: \"#ffffff\",\n                        borderRadius: 3,\n                        paddingHorizontal: 7,\n                        paddingVertical: 2,\n                        fontSize: 9,\n                        marginRight: 5,\n                        marginBottom: 7,\n                      }}\n                    >\n                      {tag}\n                    </Text>\n                  ))}\n                </View>\n                <Text>{work.summary}</Text>\n                {work.projects.map((project) => (\n                  <View style={{ marginTop: 10, marginLeft: 35 }}>\n                    <Text style={{ fontWeight: \"bold\" }}>{project.title}</Text>\n                    <Text>{project.description}</Text>\n                  </View>\n                ))}\n              </View>\n            </View>\n          ))}\n\n          <View style={styles.footer} fixed>\n            <Text\n              fixed\n              render={({ pageNumber, totalPages }) =>\n                `${data.basics.name} - page ${pageNumber} of ${totalPages}`\n              }\n            />\n            <Text>This CV is developed using react-pdf</Text>\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}